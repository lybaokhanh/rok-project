apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
spec:
  replicas: 1                             # specify the number of deployment, create 1 pod here
  selector:                               # how Deployment find the pods manage after they created ?
    matchLabels:
      component: postgres                 # Deployment will looking for objects with label of component
  template:                               # define pod template, so Deployment can maintain
    metadata:
      labels:
        component: postgres
    spec:
      volumes: # allocate storage - postgres PVC
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: database-persistent-volume-claim
      containers:
        - name: postgres
          image: postgres
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
              subPath: postgres
          env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: pgpassword
                  key: PGPASSWORD
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-cluster-ip-service
spec:
  type: ClusterIP
  selector:
    component: postgres
  ports:
    - port: 5432
      targetPort: 5432

